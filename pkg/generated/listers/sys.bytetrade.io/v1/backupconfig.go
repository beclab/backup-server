

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "bytetrade.io/web3os/backup-server/pkg/apis/sys.bytetrade.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BackupConfigLister helps list BackupConfigs.
// All objects returned here must be treated as read-only.
type BackupConfigLister interface {
	// List lists all BackupConfigs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BackupConfig, err error)
	// BackupConfigs returns an object that can list and get BackupConfigs.
	BackupConfigs(namespace string) BackupConfigNamespaceLister
	BackupConfigListerExpansion
}

// backupConfigLister implements the BackupConfigLister interface.
type backupConfigLister struct {
	indexer cache.Indexer
}

// NewBackupConfigLister returns a new BackupConfigLister.
func NewBackupConfigLister(indexer cache.Indexer) BackupConfigLister {
	return &backupConfigLister{indexer: indexer}
}

// List lists all BackupConfigs in the indexer.
func (s *backupConfigLister) List(selector labels.Selector) (ret []*v1.BackupConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BackupConfig))
	})
	return ret, err
}

// BackupConfigs returns an object that can list and get BackupConfigs.
func (s *backupConfigLister) BackupConfigs(namespace string) BackupConfigNamespaceLister {
	return backupConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BackupConfigNamespaceLister helps list and get BackupConfigs.
// All objects returned here must be treated as read-only.
type BackupConfigNamespaceLister interface {
	// List lists all BackupConfigs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.BackupConfig, err error)
	// Get retrieves the BackupConfig from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.BackupConfig, error)
	BackupConfigNamespaceListerExpansion
}

// backupConfigNamespaceLister implements the BackupConfigNamespaceLister
// interface.
type backupConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BackupConfigs in the indexer for a given namespace.
func (s backupConfigNamespaceLister) List(selector labels.Selector) (ret []*v1.BackupConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BackupConfig))
	})
	return ret, err
}

// Get retrieves the BackupConfig from the indexer for a given namespace and name.
func (s backupConfigNamespaceLister) Get(name string) (*v1.BackupConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("backupconfig"), name)
	}
	return obj.(*v1.BackupConfig), nil
}
